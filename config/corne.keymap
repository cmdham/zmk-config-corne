/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        two-thumbs {
            bindings = <&lt 3 LG(SPACE)>;
            key-positions = <38 39>;
            layers = <0 1 2>;
        };

        jk-esc {
            bindings = <&kp ESC>;
            key-positions = <19 20>;
        };
    };

    behaviors {
        better_ht: better_ht {
            compatible = "zmk,behavior-hold-tap";
            label = "BETTER_HT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB         &kp Q  &kp W  &kp E             &kp R                      &kp T          &kp Y            &kp U          &kp I            &kp O    &kp P     &kp BACKSPACE
&sk LEFT_ALT    &kp A  &kp S  &kp D             &kp F                      &kp G          &kp H            &kp J          &kp K            &kp L    &kp SEMI  &kp SQT
&sk LEFT_SHIFT  &kp Z  &kp X  &kp C             &kp V                      &kp B          &kp N            &kp M          &kp COMMA        &kp DOT  &kp FSLH  &kp LC(SPACE)
                              &sk LEFT_CONTROL  &better_ht LEFT_GUI SPACE  &lt 2 ENTER    &lt 1 BACKSPACE  &kp RIGHT_GUI  &kp RIGHT_SHIFT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp GRAVE  &kp EXCL        &trans           &kp HASH          &trans             &trans       &kp CARET      &trans         &kp ASTRK    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp TILDE
&kp PIPE   &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp COMMA    &kp SEMICOLON  &kp AMPERSAND  &kp PERCENT  &kp DOLLAR            &kp AT_SIGN            &kp BACKSLASH
&kp HOME   &kp END         &kp PG_UP        &kp PAGE_DOWN     &kp UNDER          &kp MINUS    &kp EQUAL      &kp PLUS       &trans       &trans                &trans                 &trans
                                            &trans            &trans             &trans       &trans         &trans         &trans
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp N1          &kp N2          &kp N3          &kp N4          &kp N5            &kp N6      &kp N7            &kp N8      &kp N9      &kp N0        &kp DELETE
&trans  &kp LA(N1)      &kp LA(N2)      &kp LA(N3)      &kp LA(N4)      &kp LA(N5)        &kp LEFT    &kp DOWN          &kp UP      &kp RIGHT   &trans        &trans
&trans  &kp LA(LS(N1))  &kp LA(LS(N2))  &kp LS(LA(N3))  &kp LA(LS(N4))  &kp LA(LS(N5))    &kp K_PREV  &kp K_PLAY_PAUSE  &kp K_NEXT  &kp K_MUTE  &kp C_VOL_DN  &kp C_VOL_UP
                                        &trans          &trans          &trans            &trans      &trans            &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &kp F1   &kp F2   &kp F3  &kp F4  &kp F5    &kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &trans
&trans  &kp F11  &kp F12  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans   &trans
&trans  &trans   &trans   &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans   &trans
                          &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
